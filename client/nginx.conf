worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types; # include type of file sending back in res header

    # server {
    #     listen 80;
    #     server_name localhost;
    #     return 301 https://$host$request_uri;
    # }

    server {
        listen 80;
        server_name _;
        
        # Sample ssl
        # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        # Proxy API requests to the backend
        # Requests to /api/* are forwarded to server:3000
        location /api/ {
            proxy_pass http://server:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # handle connections that require 'upgrade' from http to another protocol (e.g. websockets)
            proxy_set_header Connection 'upgrade'; # upgrade is required for connections like websockets
            proxy_set_header Host $host; # passes original Host header from client to backend server
            proxy_set_header X-Real-IP $remote_addr; # passes client's real IP address to backend server
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # tracks client's IP through proxies
            proxy_set_header X-Forwarded-Proto $scheme; # passes protocol used by client to backend server
        }
        
        # Serve static files for frontend
        location / {
            allow 192.168.50.0/24; # Allow IPs within home network
            deny all; # Deny all other IPs
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html; # search for requested files in order, defaulting to index.html if they can't be found - allowing frontend router to handle routes
        }
    }
}
